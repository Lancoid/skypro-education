package com.company.courseOne.homework04;

/**
 * –¶–∏–∫–ª—ã
 * –û–ø–µ—Ä–∞—Ç–æ—Ä break
 * –û–ø–µ—Ä–∞—Ç–æ—Ä continue
 */
@SuppressWarnings({"ForLoopReplaceableByWhile", "ConditionalBreakInInfiniteLoop", "ConstantConditions"})
public class Lesson {
    public static void main(String[] args) {
        /*
         * üí° –¶–∏–∫–ª for
         *
         * –Ø–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏.
         * –¶–∏–∫–ª for –ø—Ä–æ–≤–æ–¥–∏—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º —à–∞–≥–æ–º —Ü–∏–∫–ª–∞.
         * –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è —Ü–∏–∫–ª–∞.
         * –í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
         *
         * –í—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
         *
         * for(–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è; –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (—É—Å–ª–æ–≤–∏–µ); —à–∞–≥ (–∏—Ç–µ—Ä–∞—Ü–∏—è)) {
         *     –∫–æ–º–∞–Ω–¥–∞
         * }
         */

        for (int a = 0; a <= 9; a++) {
            System.out.println("a = " + a);
        }

        /*
         * üí° –õ—é–±–æ–µ –∏–∑ —Ç—Ä—ë—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π —Ü–∏–∫–ª–∞ (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —à–∞–≥) –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
         * –ß–µ–º –±–æ–ª—å—à–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π, —Ç–µ–º –º–µ–Ω—å—à–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–º—ã—Å–ª–∞ –∏–º–µ–µ—Ç –¥–∞–Ω–Ω—ã–π –∫–æ–¥
         */

        int b = 0;
        for (; b < 10; b++) {
            System.out.println("b = " + b);
        }

        int c = 0;
        for (; c <= 9; ) {
            System.out.println("c = " + c);
            c++;
        }

        int d = 0;
        for (; ; ) {
            if (d > 9) {
                break;
            }
            System.out.println("d = " + d);
            d++;
        }

        /* üí° –ò–Ω–æ–≥–¥–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ */

        int e, f;

        for (e = 1, f = 4; e < f; e++, f--) {
            System.out.println("e = " + e + ", f = " + f);
        }

        /* ---------------------------------------------------------------------------------------------------------------------------------------- */

        /*
         * üí° –¶–∏–∫–ª while
         *
         * –û–ø–µ—Ä–∞—Ç–æ—Ä —Ü–∏–∫–ª–∞ while –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ –±–ª–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –µ–≥–æ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–∏–Ω–Ω–æ.
         *
         * –§–æ—Ä–º–∞ —Ü–∏–∫–ª–∞ while —Å–ª–µ–¥—É—é—â–∞—è:
         *
         * while(—É—Å–ª–æ–≤–∏–µ) {
         *     // —Ç–µ–ª–æ —Ü–∏–∫–ª–∞
         * }
         *
         * üí° –ó–¥–µ—Å—å —É—Å–ª–æ–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ª—é–±—ã–º –±—É–ª–µ–≤—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º.
         * üí° –¢–µ–ª–æ —Ü–∏–∫–ª–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —É—Å–ª–æ–≤–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ.
         * –ö–æ–≥–¥–∞ —É—Å–ª–æ–≤–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª–æ–∂–Ω—ã–º, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–µ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –∏–¥—ë—Ç –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞.
         * –ï—Å–ª–∏ –≤ —Ü–∏–∫–ª–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä, —Ç–æ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å (–Ω–æ –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å).
         * –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ü–∏–∫–ª–∞, –∞ –∑–∞—Ç–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
         *
         * üí° –¢–µ–ª–æ —Ü–∏–∫–ª–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ –±—ã–ª–æ –ª–æ–∂–Ω—ã–º.
         */

        int g = 10;
        while (g > 0) {
            System.out.println("g = " + g);
            g--;
        }

        /* ---------------------------------------------------------------------------------------------------------------------------------------- */

        /*
         * üí° –¶–∏–∫–ª do-while
         *
         * –û—Ç–ª–∏—á–∏–µ —Ü–∏–∫–ª–∞ do-while –æ—Ç —Ü–∏–∫–ª–∞ while —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º,
         * —á—Ç–æ —Ü–∏–∫–ª do-while –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –æ–¥–∏–Ω —Ä–∞–∑ (–¥–∞–∂–µ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ª–æ–∂–Ω–æ).
         * –í —Ü–∏–∫–ª–µ while —Ç–∞–∫–æ–µ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ª–æ —Ü–∏–∫–ª–∞ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç—Å—è.
         * –¶–∏–∫–ª do-while –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∂–µ, —á–µ–º while.
         *
         * –§–æ—Ä–º–∞ —Ü–∏–∫–ª–∞ do-while —Å–ª–µ–¥—É—é—â–∞—è:
         *
         * do {
         *     // –∫–æ–º–∞–Ω–¥–∞ (—Ç–µ–ª–æ —Ü–∏–∫–ª–∞)
         * } while (—É—Å–ª–æ–≤–∏–µ-–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ)
         */

        int h = 10;
        do {
            System.out.println("h = " + h);
            h--;
        } while (h > 0);

        int i = 10;
        do {
            System.out.println("i = " + i);
            i--;
        } while (i < 0);

        /* ---------------------------------------------------------------------------------------------------------------------------------------- */

        /*
         * üí° –û–ø–µ—Ä–∞—Ç–æ—Ä break
         *
         * –û–ø–µ—Ä–∞—Ç–æ—Ä break –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤, –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–π—Ç–∏ –∏–∑ —Ü–∏–∫–ª–∞.
         */

        for (int j = 0; j < 100; j++) {
            System.out.println("j = " + j);

            if (j == 5) {
                break;
            }
        }

        /* ---------------------------------------------------------------------------------------------------------------------------------------- */

        /*
         * üí° –û–ø–µ—Ä–∞—Ç–æ—Ä continue
         *
         * –û–ø–µ—Ä–∞—Ç–æ—Ä break –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤, –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–π—Ç–∏ –∏–∑ —Ü–∏–∫–ª–∞.
         */

        for (int k = 0; k <= 10; k++) {
            if (k % 2 != 0) {
                continue;
            }

            System.out.println("k = " + k);
        }
    }
}
